public static void getTwitterAPIdata( String screen_name ){

    String stepUrl = 'https://api.twitter.com/1.1/users/show.json';
    String method = 'GET';

    // Twitter App Tokens (Edit here if you want to change the App)
    String access_token = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
    String tokenSecret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
    String consumerSecret = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
    String consumerKey = 'XXXXXXXXXXXXXXXXXXXXX';

    HttpRequest req = new HttpRequest();

    req.setMethod( method );
    req.setEndpoint( stepUrl + '?screen_name=' + screen_name  );

    // Twitter's HTTP Authorization header algorithm

    Map params = new Map();
    params.put( 'oauth_consumer_key', consumerKey); // Identifies which application is making the request.
    params.put( 'oauth_token', access_token); // Represents a user’s permission to share access to their account with your application. 
    params.put( 'oauth_version', '1.0');
    params.put( 'oauth_signature_method', 'HMAC-SHA1'); // The oauth_signature_method used by Twitter is HMAC-SHA1.
    params.put( 'oauth_timestamp', String.valueOf(datetime.now().getTime() / 1000) ); // Indicates when the request was created. 

    // The oauth_nonce parameter is a unique token your application should generate for each unique request. 

    String oauth_nonce = '';

    String[] charmap = new String[] {
        '0','1','2','3','4','5','6','7','8','9',
        'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',
        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'
    };

    for ( Integer i = 0; i < 41; ++i ) oauth_nonce += charmap.get(Math.min((Math.random() * charmap.size()).intValue(), charmap.size() - 1));

    params.put( 'oauth_nonce', oauth_nonce);

    // The oauth_signature parameter contains a value which is generated by running all of the other request 
    // parameters and two secret values through a signing algorithm. 

    String signature = '';

    String encodedParams = '';
    List keys = new List();
    keys.addAll(params.keySet());
    keys.sort();
    for(String key : keys){
        if(encodedParams != '') encodedParams += '&';
        encodedParams += key + '=' + params.get(key);
    }
    encodedParams+='&screen_name='+screen_name;

    String signatureBaseString = method+'&'+EncodingUtil.urlEncode( stepUrl, 'UTF-8')+'&';
    signatureBaseString += EncodingUtil.urlEncode( encodedParams, 'UTF-8');
    signatureBaseString = signatureBaseString.replace('+', '%20' );
    signatureBaseString = signatureBaseString.replace('*', '%2A'); // ASTERISK
    signatureBaseString = signatureBaseString.replace('%7E', '~'); // TILDE

    String encryptionKey = EncodingUtil.urlEncode( consumerSecret, 'UTF-8')+'&'+EncodingUtil.urlEncode( tokenSecret, 'UTF-8');
    
    signature = EncodingUtil.base64Encode(Crypto.generateMac('HmacSHA1',Blob.valueOf( signatureBaseString ), Blob.valueOf( encryptionKey )));

    signature = EncodingUtil.urlEncode( signature, 'UTF-8' );

    params.put( 'oauth_signature', signature );

    // Twitter’s implementation requires that requests needing authorization contain an additional HTTP Authorization header 

    String authorizationHeader = '';

    keys = new List();
    keys.addAll(params.keySet());
    keys.sort();
    for(String k : keys){
        if( authorizationHeader != '') authorizationHeader += ', ';
        authorizationHeader += k+'="'+params.get(k)+'"';
    }

    authorizationHeader = 'OAuth ' + authorizationHeader;

    req.setHeader( 'Authorization', authorizationHeader );
    req.setHeader('content-type', 'application/x-www-form-urlencoded');

     // Response JSON application-json and retrieve only Twitter followers

     Http http = new Http();
     HTTPResponse res = http.send(req);
     String responseJson = res.getBody();

     Map returnMap = (Map) Json.deserializeUntyped( responseJson );

     System.debug('\n\n Twitter info ' + returnMap + '\n\n');

}